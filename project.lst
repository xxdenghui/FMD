

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed May 01 12:53:09 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text494,local,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text495,local,class=CODE,delta=2
    14                           	psect	text496,local,class=CODE,delta=2
    15                           	psect	text497,local,class=CODE,delta=2
    16                           	psect	text498,local,class=CODE,delta=2
    17                           	psect	text499,local,class=CODE,delta=2
    18                           	psect	text500,local,class=CODE,delta=2
    19                           	psect	text501,local,class=CODE,delta=2
    20                           	psect	text502,local,class=CODE,delta=2
    21                           	psect	text503,local,class=CODE,delta=2
    22                           	psect	text504,local,class=CODE,delta=2
    23                           	psect	text505,local,class=CODE,delta=2
    24                           	psect	text506,local,class=CODE,delta=2
    25                           	psect	text507,local,class=CODE,delta=2
    26                           	psect	text508,local,class=CODE,delta=2
    27                           	psect	text509,local,class=CODE,delta=2
    28                           	psect	text510,local,class=CODE,delta=2
    29                           	psect	text511,local,class=CODE,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text512,local,class=CODE,delta=2
    32                           	psect	text513,local,class=CODE,delta=2
    33                           	psect	text514,local,class=CODE,delta=2
    34                           	psect	text515,local,class=CODE,delta=2
    35                           	psect	pa_nodes,global,class=CODE,delta=2
    36                           	dabs	1,0x19D,1
    37                           	dabs	1,0x19E,1
    38                           	dabs	1,0x19E,1
    39                           	dabs	1,0x19E,1
    40                           	dabs	1,0x18C,1
    41                           	dabs	1,0x19E,1
    42                           	dabs	1,0x19E,1
    43                           	dabs	1,0x19E,1
    44                           	dabs	1,0x19E,1
    45                           	dabs	1,0x19D,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19D,1
    48                           	dabs	1,0x19D,1
    49                           	dabs	1,0x19D,1
    50                           	dabs	1,0x18C,1
    51                           	dabs	1,0x7E,2
    52  000A                     
    53                           	psect	text494
    54  0000                     __ptext494:	
    55  019D                     _PSTRCON	set	413	;_PSTRCON
    56  019E                     _SRCON	set	414	;_SRCON
    57  0CF5                     _C1SEN	set	3317	;_C1SEN
    58  0CF4                     _C2REN	set	3316	;_C2REN
    59  0C67                     _EEPGD	set	3175	;_EEPGD
    60  0CF2                     _PULSR	set	3314	;_PULSR
    61  0CF3                     _PULSS	set	3315	;_PULSS
    62  0CF6                     _SR0	set	3318	;_SR0
    63  0CF7                     _SR1	set	3319	;_SR1
    64  0CE8                     _STRA	set	3304	;_STRA
    65  0CE9                     _STRB	set	3305	;_STRB
    66  0CEA                     _STRC	set	3306	;_STRC
    67  0CEB                     _STRD	set	3307	;_STRD
    68  0CEC                     _STRSYNC	set	3308	;_STRSYNC
    69  0C62                     _WREN	set	3170	;_WREN
    70                           
    71                           	psect	nvBANK0
    72  002B                     __pnvBANK0:	
    73  002B                     _brightCW:	
    74  002B                     	ds	1
    75  002C                     _brightWW:	
    76  002C                     	ds	1
    77                           
    78                           	psect	nvCOMMON
    79  007B                     __pnvCOMMON:	
    80  007B                     _bright:	
    81  007B                     	ds	1
    82  001F                     _ADCON0	set	31
    83  001E                     _ADRESH	set	30
    84  0019                     _CMCON0	set	25
    85  000B                     _INTCON	set	11
    86  001B                     _MSCKCON	set	27
    87  0005                     _PORTA	set	5
    88  0007                     _PORTC	set	7
    89  0010                     _T1CON	set	16
    90  0012                     _T2CON	set	18
    91  0001                     _TMR0	set	1
    92  000F                     _TMR1H	set	15
    93  000E                     _TMR1L	set	14
    94  0011                     _TMR2	set	17
    95  005F                     _GIE	set	95
    96  00F9                     _GO_DONE	set	249
    97  005C                     _INTE	set	92
    98  0059                     _INTF	set	89
    99  002B                     _PA3	set	43
   100  002E                     _PA6	set	46
   101  002F                     _PA7	set	47
   102  003C                     _PC4	set	60
   103  005E                     _PEIE	set	94
   104  005D                     _T0IE	set	93
   105  005A                     _T0IF	set	90
   106  0060                     _TMR1IF	set	96
   107  0080                     _TMR1ON	set	128
   108  0061                     _TMR2IF	set	97
   109  0092                     _TMR2ON	set	146
   110  009F                     _ADCON1	set	159
   111  009E                     _ADRESL	set	158
   112  0091                     _ANSEL	set	145
   113  0081                     _OPTION	set	129
   114  008F                     _OSCCON	set	143
   115  0092                     _PR2	set	146
   116  0085                     _TRISA	set	133
   117  0087                     _TRISC	set	135
   118  0095                     _WPUA	set	149
   119  0088                     _WPUC	set	136
   120  040E                     _INTEDG	set	1038
   121  0460                     _TMR1IE	set	1120
   122  0461                     _TMR2IE	set	1121
   123  042B                     _TRISA3	set	1067
   124  0439                     _TRISC1	set	1081
   125  043A                     _TRISC2	set	1082
   126  043B                     _TRISC3	set	1083
   127  043C                     _TRISC4	set	1084
   128  0114                     _PR4L	set	276
   129  011A                     _PR5L	set	282
   130  0115                     _PWM4CR0	set	277
   131  0116                     _PWM4CR1	set	278
   132  011B                     _PWM5CR0	set	283
   133  011C                     _PWM5CR1	set	284
   134  0117                     _T4CKDIV	set	279
   135  011D                     _T5CKDIV	set	285
   136  0113                     _TMR4H	set	275
   137  0119                     _TMR5H	set	281
   138  08B2                     _TMR4ON	set	2226
   139  08E2                     _TMR5ON	set	2274
   140                           
   141                           	psect	cinit
   142  01BD                     start_initialization:	
   143                           
   144                           ; Clear objects allocated to COMMON
   145  01BD  01F6               	clrf	__pbssCOMMON& (0+127)
   146  01BE  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   147  01BF  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   148  01C0  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   149  01C1  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   150                           
   151                           ; Clear objects allocated to BANK0
   152  01C2  01A6               	clrf	__pbssBANK0& (0+127)
   153  01C3  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   154  01C4  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   155  01C5  01A9               	clrf	(__pbssBANK0+3)& (0+127)
   156  01C6  01AA               	clrf	(__pbssBANK0+4)& (0+127)
   157  01C7                     end_of_initialization:	
   158                           ;End of C runtime variable initialization code
   159                           
   160  01C7  0183               	clrf	3
   161  01C8  291C               	ljmp	_main	;jump to C main() function
   162                           
   163                           	psect	bssCOMMON
   164  0076                     __pbssCOMMON:	
   165  0076                     Task_Key@key_press_time:	
   166  0076                     	ds	1
   167  0077                     _cct:	
   168  0077                     	ds	1
   169  0078                     _sys_status:	
   170  0078                     	ds	1
   171  0079                     _task_ready:	
   172  0079                     	ds	1
   173  007A                     _ticks:	
   174  007A                     	ds	1
   175                           
   176                           	psect	bssBANK0
   177  0026                     __pbssBANK0:	
   178  0026                     _adcVal:	
   179  0026                     	ds	2
   180  0028                     _tim1val:	
   181  0028                     	ds	2
   182  002A                     _ReadAPin:	
   183  002A                     	ds	1
   184                           
   185                           	psect	cstackCOMMON
   186  0070                     __pcstackCOMMON:	
   187  0070                     ?_BoardInit:	
   188  0070                     ?_Task_Idle:	
   189                           ; 0 bytes @ 0x0
   190                           
   191  0070                     ?_Task_IRSend:	
   192                           ; 0 bytes @ 0x0
   193                           
   194  0070                     ?_Task_Key:	
   195                           ; 0 bytes @ 0x0
   196                           
   197  0070                     ?_Task_SoftPwm:	
   198                           ; 0 bytes @ 0x0
   199                           
   200  0070                     ?_Task_LowBat:	
   201                           ; 0 bytes @ 0x0
   202                           
   203  0070                     ?_Timer1DeInit:	
   204                           ; 0 bytes @ 0x0
   205                           
   206  0070                     ??_Timer1DeInit:	
   207                           ; 0 bytes @ 0x0
   208                           
   209  0070                     ?_Timer2DeInit:	
   210                           ; 0 bytes @ 0x0
   211                           
   212  0070                     ??_Timer2DeInit:	
   213                           ; 0 bytes @ 0x0
   214                           
   215  0070                     ?_Timer1Init:	
   216                           ; 0 bytes @ 0x0
   217                           
   218  0070                     ?_DelayUs:	
   219                           ; 0 bytes @ 0x0
   220                           
   221  0070                     ?_Timer2Init:	
   222                           ; 0 bytes @ 0x0
   223                           
   224  0070                     ?_ClockInit:	
   225                           ; 0 bytes @ 0x0
   226                           
   227  0070                     ?_Timer0Init:	
   228                           ; 0 bytes @ 0x0
   229                           
   230  0070                     ?_INTInit:	
   231                           ; 0 bytes @ 0x0
   232                           
   233  0070                     ?_Pwm4Init:	
   234                           ; 0 bytes @ 0x0
   235                           
   236  0070                     ?_Pwm5Init:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ?_ADCInit:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ?_main:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_ISR:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ??_ISR:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?i1_Timer1Init:	
   252                           ; 0 bytes @ 0x0
   253                           
   254  0070                     ??i1_Timer1Init:	
   255                           ; 0 bytes @ 0x0
   256                           
   257                           
   258                           ; 0 bytes @ 0x0
   259  0070                     	ds	2
   260  0072                     ??_BoardInit:	
   261  0072                     ??_Task_Key:	
   262                           ; 0 bytes @ 0x2
   263                           
   264  0072                     ??_Task_SoftPwm:	
   265                           ; 0 bytes @ 0x2
   266                           
   267  0072                     ??_Timer1Init:	
   268                           ; 0 bytes @ 0x2
   269                           
   270  0072                     ??_DelayUs:	
   271                           ; 0 bytes @ 0x2
   272                           
   273  0072                     ??_Timer2Init:	
   274                           ; 0 bytes @ 0x2
   275                           
   276  0072                     ??_ClockInit:	
   277                           ; 0 bytes @ 0x2
   278                           
   279  0072                     ??_Timer0Init:	
   280                           ; 0 bytes @ 0x2
   281                           
   282  0072                     ??_INTInit:	
   283                           ; 0 bytes @ 0x2
   284                           
   285  0072                     ??_Pwm4Init:	
   286                           ; 0 bytes @ 0x2
   287                           
   288  0072                     ??_Pwm5Init:	
   289                           ; 0 bytes @ 0x2
   290                           
   291  0072                     ??_ADCInit:	
   292                           ; 0 bytes @ 0x2
   293                           
   294  0072                     DelayUs@Time:	
   295                           ; 0 bytes @ 0x2
   296                           
   297                           
   298                           ; 1 bytes @ 0x2
   299  0072                     	ds	1
   300  0073                     DelayUs@a:	
   301                           
   302                           ; 1 bytes @ 0x3
   303  0073                     	ds	1
   304  0074                     ??_Task_Idle:	
   305  0074                     ??_Task_IRSend:	
   306                           ; 0 bytes @ 0x4
   307                           
   308  0074                     ?_GET_ADC_DATA:	
   309                           ; 0 bytes @ 0x4
   310                           
   311                           
   312                           ; 2 bytes @ 0x4
   313  0074                     	ds	2
   314  0076                     ??_Task_LowBat:	
   315  0076                     ??_GET_ADC_DATA:	
   316                           ; 0 bytes @ 0x6
   317                           
   318  0076                     ??_main:	
   319                           ; 0 bytes @ 0x6
   320                           
   321                           
   322                           	psect	cstackBANK0
   323  0020                     __pcstackBANK0:	
   324                           ; 0 bytes @ 0x6
   325                           
   326  0020                     GET_ADC_DATA@tBuffer:	
   327                           
   328                           ; 2 bytes @ 0x0
   329  0020                     	ds	2
   330  0022                     GET_ADC_DATA@AN_CH:	
   331                           
   332                           ; 1 bytes @ 0x2
   333  0022                     	ds	1
   334  0023                     GET_ADC_DATA@ADC_DATA:	
   335                           
   336                           ; 2 bytes @ 0x3
   337  0023                     	ds	2
   338  0025                     GET_ADC_DATA@ADCON0Buff:	
   339                           
   340                           ; 1 bytes @ 0x5
   341  0025                     	ds	1
   342                           
   343                           	psect	maintext
   344  011C                     __pmaintext:	
   345 ;;Data sizes: Strings 0, constant 0, data 0, bss 10, persistent 3 stack 0
   346 ;;Auto spaces:   Size  Autos    Used
   347 ;; COMMON          14      6      12
   348 ;; BANK0           80      6      13
   349 ;; BANK1           32      0       0
   350 ;;
   351 ;; Pointer list with targets:
   352 ;; ?_GET_ADC_DATA	unsigned int  size(1) Largest target is 0
   353 ;;
   354 ;;
   355 ;; Critical Paths under _main in COMMON
   356 ;;
   357 ;;   _Task_LowBat->_GET_ADC_DATA
   358 ;;   _GET_ADC_DATA->_DelayUs
   359 ;;   _Task_IRSend->_DelayUs
   360 ;;   _Task_Idle->_DelayUs
   361 ;;
   362 ;; Critical Paths under _ISR in COMMON
   363 ;;
   364 ;;   None.
   365 ;;
   366 ;; Critical Paths under _main in BANK0
   367 ;;
   368 ;;   _Task_LowBat->_GET_ADC_DATA
   369 ;;
   370 ;; Critical Paths under _ISR in BANK0
   371 ;;
   372 ;;   None.
   373 ;;
   374 ;; Critical Paths under _main in BANK1
   375 ;;
   376 ;;   None.
   377 ;;
   378 ;; Critical Paths under _ISR in BANK1
   379 ;;
   380 ;;   None.
   381 ;;
   382 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   383 ;;
   384 ;;
   385 ;;Call Graph Tables:
   386 ;;
   387 ;; ---------------------------------------------------------------------------------
   388 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   389 ;; ---------------------------------------------------------------------------------
   390 ;; (0) _main                                                 0     0      0     236
   391 ;;                          _BoardInit
   392 ;;                          _Task_Idle
   393 ;;                        _Task_IRSend
   394 ;;                           _Task_Key
   395 ;;                       _Task_SoftPwm
   396 ;;                        _Task_LowBat
   397 ;; ---------------------------------------------------------------------------------
   398 ;; (1) _Task_LowBat                                          0     0      0     144
   399 ;;                       _GET_ADC_DATA
   400 ;; ---------------------------------------------------------------------------------
   401 ;; (2) _GET_ADC_DATA                                         9     7      2     144
   402 ;;                                              4 COMMON     2     0      2
   403 ;;                                              0 BANK0      6     6      0
   404 ;;                            _DelayUs
   405 ;; ---------------------------------------------------------------------------------
   406 ;; (1) _Task_IRSend                                          0     0      0      46
   407 ;;                            _DelayUs
   408 ;; ---------------------------------------------------------------------------------
   409 ;; (1) _Task_Idle                                            0     0      0      46
   410 ;;                         _Timer2Init
   411 ;;                            _DelayUs
   412 ;; ---------------------------------------------------------------------------------
   413 ;; (3) _DelayUs                                              2     2      0      46
   414 ;;                                              2 COMMON     2     2      0
   415 ;; ---------------------------------------------------------------------------------
   416 ;; (1) _BoardInit                                            0     0      0       0
   417 ;;                          _ClockInit
   418 ;;                         _Timer0Init
   419 ;;                         _Timer1Init
   420 ;;                            _INTInit
   421 ;;                           _Pwm4Init
   422 ;;                           _Pwm5Init
   423 ;;                            _ADCInit
   424 ;; ---------------------------------------------------------------------------------
   425 ;; (2) _ADCInit                                              0     0      0       0
   426 ;; ---------------------------------------------------------------------------------
   427 ;; (2) _Pwm5Init                                             0     0      0       0
   428 ;; ---------------------------------------------------------------------------------
   429 ;; (2) _Pwm4Init                                             0     0      0       0
   430 ;; ---------------------------------------------------------------------------------
   431 ;; (2) _INTInit                                              0     0      0       0
   432 ;; ---------------------------------------------------------------------------------
   433 ;; (2) _Timer0Init                                           0     0      0       0
   434 ;; ---------------------------------------------------------------------------------
   435 ;; (2) _ClockInit                                            0     0      0       0
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (2) _Timer2Init                                           0     0      0       0
   438 ;; ---------------------------------------------------------------------------------
   439 ;; (2) _Timer1Init                                           0     0      0       0
   440 ;; ---------------------------------------------------------------------------------
   441 ;; (1) _Task_SoftPwm                                         0     0      0       0
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (1) _Task_Key                                             1     1      0       0
   444 ;;                                              2 COMMON     1     1      0
   445 ;; ---------------------------------------------------------------------------------
   446 ;; Estimated maximum stack depth 3
   447 ;; ---------------------------------------------------------------------------------
   448 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   449 ;; ---------------------------------------------------------------------------------
   450 ;; (4) _ISR                                                  2     2      0       0
   451 ;;                                              0 COMMON     2     2      0
   452 ;;                       _Timer1DeInit
   453 ;;                       _Timer2DeInit
   454 ;;                       i1_Timer1Init
   455 ;; ---------------------------------------------------------------------------------
   456 ;; (5) i1_Timer1Init                                         0     0      0       0
   457 ;; ---------------------------------------------------------------------------------
   458 ;; (5) _Timer2DeInit                                         0     0      0       0
   459 ;; ---------------------------------------------------------------------------------
   460 ;; (5) _Timer1DeInit                                         0     0      0       0
   461 ;; ---------------------------------------------------------------------------------
   462 ;; Estimated maximum stack depth 5
   463 ;; ---------------------------------------------------------------------------------
   464 ;; Call Graph Graphs:
   465 ;; _main (ROOT)
   466 ;;   _BoardInit
   467 ;;     _ClockInit
   468 ;;     _Timer0Init
   469 ;;     _Timer1Init
   470 ;;     _INTInit
   471 ;;     _Pwm4Init
   472 ;;     _Pwm5Init
   473 ;;     _ADCInit
   474 ;;   _Task_Idle
   475 ;;     _Timer2Init
   476 ;;     _DelayUs
   477 ;;   _Task_IRSend
   478 ;;     _DelayUs
   479 ;;   _Task_Key
   480 ;;   _Task_SoftPwm
   481 ;;   _Task_LowBat
   482 ;;     _GET_ADC_DATA
   483 ;;       _DelayUs
   484 ;;
   485 ;; _ISR (ROOT)
   486 ;;   _Timer1DeInit
   487 ;;   _Timer2DeInit
   488 ;;   i1_Timer1Init
   489 ;;
   490 ;; Address spaces:
   491 ;;Name               Size   Autos  Total    Cost      Usage
   492 ;;BITCOMMON            E      0       0       0        0.0%
   493 ;;EEDATA             100      0       0       0        0.0%
   494 ;;NULL                 0      0       0       0        0.0%
   495 ;;CODE                 0      0       0       0        0.0%
   496 ;;COMMON               E      6       C       1       85.7%
   497 ;;BITSFR0              0      0       0       1        0.0%
   498 ;;SFR0                 0      0       0       1        0.0%
   499 ;;BITSFR1              0      0       0       2        0.0%
   500 ;;SFR1                 0      0       0       2        0.0%
   501 ;;STACK                0      0       7       2        0.0%
   502 ;;BITBANK0            50      0       0       3        0.0%
   503 ;;BANK0               50      6       D       4       16.3%
   504 ;;BITBANK1            20      0       0       5        0.0%
   505 ;;BITSFR2              0      0       0       5        0.0%
   506 ;;SFR2                 0      0       0       5        0.0%
   507 ;;BANK1               20      0       0       6        0.0%
   508 ;;ABS                  0      0      19       7        0.0%
   509 ;;DATA                 0      0      20       8        0.0%
   510                           
   511                           
   512 ;; *************** function _main *****************
   513 ;; Defined at:
   514 ;;		line 49 in file "main.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;		None               void
   521 ;; Registers used:
   522 ;;		wreg, status,2, status,0, pclath, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 17F/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMMON   BANK0   BANK1
   528 ;;      Params:         0       0       0
   529 ;;      Locals:         0       0       0
   530 ;;      Temps:          0       0       0
   531 ;;      Totals:         0       0       0
   532 ;;Total ram usage:        0 bytes
   533 ;; Hardware stack levels required when called:    5
   534 ;; This function calls:
   535 ;;		_BoardInit
   536 ;;		_Task_Idle
   537 ;;		_Task_IRSend
   538 ;;		_Task_Key
   539 ;;		_Task_SoftPwm
   540 ;;		_Task_LowBat
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545  011C                     _main:	
   546                           
   547                           ;main.c: 51: BoardInit( );
   548                           
   549                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   550  011C  2139               	fcall	_BoardInit
   551                           
   552                           ;main.c: 52: bright = 255;
   553  011D  30FF               	movlw	255
   554  011E  00FB               	movwf	_bright
   555                           
   556                           ;main.c: 53: brightWW = bright;
   557  011F  1283               	bcf	3,5	;RP0=0, select bank0
   558  0120  00AC               	movwf	_brightWW
   559                           
   560                           ;main.c: 54: brightCW = bright;
   561  0121  087B               	movf	_bright,w
   562  0122  00AB               	movwf	_brightCW
   563                           
   564                           ;main.c: 55: cct = 0;
   565  0123  01F7               	clrf	_cct
   566                           
   567                           ;main.c: 56: TMR4ON = 1;
   568  0124  1703               	bsf	3,6	;RP1=1, select bank2
   569  0125  1516               	bsf	22,2
   570                           
   571                           ;main.c: 57: TRISC3 = 0;
   572  0126  1683               	bsf	3,5	;RP0=1, select bank1
   573  0127  1303               	bcf	3,6	;RP1=0, select bank1
   574  0128  1187               	bcf	7,3
   575                           
   576                           ;main.c: 58: TMR5ON = 1;
   577  0129  1283               	bcf	3,5	;RP0=0, select bank2
   578  012A  1703               	bsf	3,6	;RP1=1, select bank2
   579  012B  151C               	bsf	28,2
   580                           
   581                           ;main.c: 59: TRISC2 = 0;
   582  012C  1683               	bsf	3,5	;RP0=1, select bank1
   583  012D  1303               	bcf	3,6	;RP1=0, select bank1
   584  012E  1107               	bcf	7,2
   585                           
   586                           ;main.c: 67: sys_status.bit0 = 1;
   587  012F  1478               	bsf	_sys_status,0	;volatile
   588  0130  2932               	goto	l4044
   589  0131                     l4046:	
   590                           
   591                           ;main.c: 73: Task_Idle();
   592  0131  2195               	fcall	_Task_Idle
   593  0132                     l4044:	
   594                           ;main.c: 74: }
   595                           
   596                           
   597                           ;main.c: 71: {
   598                           ;main.c: 72: if ( !sys_status.bit0 ){
   599  0132  1C78               	btfss	_sys_status,0	;volatile
   600  0133  2931               	goto	l4046
   601                           
   602                           ;main.c: 75: else {
   603                           ;main.c: 76: Task_IRSend();
   604  0134  21C9               	fcall	_Task_IRSend
   605                           
   606                           ;main.c: 77: Task_Key();
   607  0135  209A               	fcall	_Task_Key
   608                           
   609                           ;main.c: 78: Task_SoftPwm();
   610  0136  2056               	fcall	_Task_SoftPwm
   611                           
   612                           ;main.c: 79: Task_LowBat();
   613  0137  20FB               	fcall	_Task_LowBat
   614  0138  2932               	goto	l4044
   615  0139                     __end_of_main:	
   616                           
   617                           	psect	text495
   618  00FB                     __ptext495:	
   619 ;; =============== function _main ends ============
   620                           
   621                           
   622 ;; *************** function _Task_LowBat *****************
   623 ;; Defined at:
   624 ;;		line 306 in file "main.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;		None               void
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/20
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1
   638 ;;      Params:         0       0       0
   639 ;;      Locals:         0       0       0
   640 ;;      Temps:          0       0       0
   641 ;;      Totals:         0       0       0
   642 ;;Total ram usage:        0 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; Hardware stack levels required when called:    4
   645 ;; This function calls:
   646 ;;		_GET_ADC_DATA
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651  00FB                     _Task_LowBat:	
   652                           
   653                           ;main.c: 307: if ( sys_status.bit6 ){
   654                           
   655                           ; Regs used in _Task_LowBat: [wreg+status,2+status,0+pclath+cstack]
   656  00FB  1F78               	btfss	_sys_status,6	;volatile
   657  00FC  0008               	return
   658                           
   659                           ;main.c: 308: adcVal = GET_ADC_DATA(2);
   660  00FD  3002               	movlw	2
   661  00FE  20D1               	fcall	_GET_ADC_DATA
   662  00FF  0875               	movf	?_GET_ADC_DATA+1,w
   663  0100  00A7               	movwf	_adcVal+1
   664  0101  0874               	movf	?_GET_ADC_DATA,w
   665  0102  00A6               	movwf	_adcVal
   666                           
   667                           ;main.c: 309: if ( !PA3 )
   668  0103  1985               	btfsc	5,3
   669  0104  2907               	goto	l1170
   670                           
   671                           ;main.c: 310: sys_status.bit4 = 1;
   672  0105  1678               	bsf	_sys_status,4	;volatile
   673  0106  2908               	goto	l1171
   674  0107                     l1170:	
   675                           
   676                           ;main.c: 311: else
   677                           ;main.c: 312: sys_status.bit4 = 0;
   678  0107  1278               	bcf	_sys_status,4	;volatile
   679  0108                     l1171:	
   680                           
   681                           ;main.c: 313: if ( sys_status.bit4 ){
   682  0108  1E78               	btfss	_sys_status,4	;volatile
   683  0109  290C               	goto	l1172
   684                           
   685                           ;main.c: 314: PA6=1;
   686  010A  1705               	bsf	5,6
   687  010B  2919               	goto	l1174
   688  010C                     l1172:	
   689                           ;main.c: 316: }
   690                           
   691                           ;main.c: 315: PA7=0;
   692                           
   693                           
   694                           ;main.c: 317: else {
   695                           ;main.c: 318: PA6=0;
   696  010C  1305               	bcf	5,6
   697                           
   698                           ;main.c: 319: if ( cct ){
   699  010D  0877               	movf	_cct,w
   700  010E  1903               	btfsc	3,2
   701  010F  2919               	goto	l1174
   702                           
   703                           ;main.c: 320: if ( adcVal <= 0x22D ){
   704  0110  3002               	movlw	2
   705  0111  0227               	subwf	_adcVal+1,w
   706  0112  302E               	movlw	46
   707  0113  1903               	skipnz
   708  0114  0226               	subwf	_adcVal,w
   709  0115  1803               	skipnc
   710  0116  291A               	goto	l1173
   711                           
   712                           ;main.c: 321: PA7=1;
   713  0117  1785               	bsf	5,7
   714  0118  291A               	goto	l1173
   715  0119                     l1174:	
   716                           
   717                           ;main.c: 324: else
   718                           ;main.c: 325: PA7=0;
   719  0119  1385               	bcf	5,7
   720  011A                     l1173:	
   721                           
   722                           ;main.c: 326: }
   723                           ;main.c: 327: sys_status.bit6 = 0;
   724  011A  1378               	bcf	_sys_status,6	;volatile
   725  011B  0008               	return
   726  011C                     __end_of_Task_LowBat:	
   727                           
   728                           	psect	text496
   729  00D1                     __ptext496:	
   730 ;; =============== function _Task_LowBat ends ============
   731                           
   732                           
   733 ;; *************** function _GET_ADC_DATA *****************
   734 ;; Defined at:
   735 ;;		line 372 in file "board.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;  AN_CH           1    wreg     unsigned char 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  AN_CH           1    2[BANK0 ] unsigned char 
   740 ;;  ADC_DATA        2    3[BANK0 ] unsigned int 
   741 ;;  tBuffer         2    0[BANK0 ] unsigned int 
   742 ;;  ADCON0Buff      1    5[BANK0 ] unsigned char 
   743 ;;  i               1    0        unsigned char 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  2    4[COMMON] unsigned int 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, pclath, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/20
   750 ;;		On exit  : 60/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1
   753 ;;      Params:         2       0       0
   754 ;;      Locals:         0       6       0
   755 ;;      Temps:          0       0       0
   756 ;;      Totals:         2       6       0
   757 ;;Total ram usage:        8 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    3
   760 ;; This function calls:
   761 ;;		_DelayUs
   762 ;; This function is called by:
   763 ;;		_Task_LowBat
   764 ;; This function uses a non-reentrant model
   765 ;;
   766  00D1                     _GET_ADC_DATA:	
   767                           
   768                           ; Regs used in _GET_ADC_DATA: [wreg+status,2+status,0+pclath+cstack]
   769                           ;GET_ADC_DATA@AN_CH stored from wreg
   770  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   771  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   772  00D3  00A2               	movwf	GET_ADC_DATA@AN_CH
   773                           
   774                           ;board.c: 376: uint16_t ADC_DATA=0;
   775  00D4  01A3               	clrf	GET_ADC_DATA@ADC_DATA
   776  00D5  01A4               	clrf	GET_ADC_DATA@ADC_DATA+1
   777                           
   778                           ;board.c: 378: ADCON0Buff = ADCON0 & 0B11100011;
   779  00D6  081F               	movf	31,w
   780  00D7  00A5               	movwf	GET_ADC_DATA@ADCON0Buff
   781  00D8  30E3               	movlw	227
   782  00D9  05A5               	andwf	GET_ADC_DATA@ADCON0Buff,f
   783                           
   784                           ;board.c: 380: AN_CH <<=2;
   785  00DA  1003               	clrc
   786  00DB  0DA2               	rlf	GET_ADC_DATA@AN_CH,f
   787  00DC  1003               	clrc
   788  00DD  0DA2               	rlf	GET_ADC_DATA@AN_CH,f
   789                           
   790                           ;board.c: 381: ADCON0Buff |= AN_CH;
   791  00DE  0822               	movf	GET_ADC_DATA@AN_CH,w
   792  00DF  04A5               	iorwf	GET_ADC_DATA@ADCON0Buff,f
   793                           
   794                           ;board.c: 383: ADCON0 = ADCON0Buff;
   795  00E0  0825               	movf	GET_ADC_DATA@ADCON0Buff,w
   796  00E1  009F               	movwf	31	;volatile
   797                           
   798                           ;board.c: 384: DelayUs(20);
   799  00E2  3014               	movlw	20
   800  00E3  21ED               	fcall	_DelayUs
   801                           
   802                           ;board.c: 385: GO_DONE = 1;
   803  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   804  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   805  00E6  149F               	bsf	31,1
   806  00E7                     l2301:	
   807                           ;board.c: 386: while( GO_DONE==1 );
   808                           
   809  00E7  189F               	btfsc	31,1
   810  00E8  28E7               	goto	l2301
   811                           
   812                           ;board.c: 388: ADC_DATA = ADRESH;
   813  00E9  081E               	movf	30,w	;volatile
   814  00EA  00A3               	movwf	GET_ADC_DATA@ADC_DATA
   815  00EB  01A4               	clrf	GET_ADC_DATA@ADC_DATA+1
   816                           
   817                           ;board.c: 389: ADC_DATA <<=8;
   818  00EC  00A4               	movwf	GET_ADC_DATA@ADC_DATA+1
   819  00ED  01A3               	clrf	GET_ADC_DATA@ADC_DATA
   820                           
   821                           ;board.c: 390: ADC_DATA |= ADRESL;
   822  00EE  1683               	bsf	3,5	;RP0=1, select bank1
   823  00EF  081E               	movf	30,w	;volatile
   824  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   825  00F1  04A3               	iorwf	GET_ADC_DATA@ADC_DATA,f
   826                           
   827                           ;board.c: 391: tBuffer = ADC_DATA;
   828  00F2  0824               	movf	GET_ADC_DATA@ADC_DATA+1,w
   829  00F3  00A1               	movwf	GET_ADC_DATA@tBuffer+1
   830  00F4  0823               	movf	GET_ADC_DATA@ADC_DATA,w
   831  00F5  00A0               	movwf	GET_ADC_DATA@tBuffer
   832                           
   833                           ;board.c: 392: return tBuffer;
   834  00F6  0821               	movf	GET_ADC_DATA@tBuffer+1,w
   835  00F7  00F5               	movwf	?_GET_ADC_DATA+1
   836  00F8  0820               	movf	GET_ADC_DATA@tBuffer,w
   837  00F9  00F4               	movwf	?_GET_ADC_DATA
   838  00FA  0008               	return
   839  00FB                     __end_of_GET_ADC_DATA:	
   840                           
   841                           	psect	text497
   842  01C9                     __ptext497:	
   843 ;; =============== function _GET_ADC_DATA ends ============
   844                           
   845                           
   846 ;; *************** function _Task_IRSend *****************
   847 ;; Defined at:
   848 ;;		line 290 in file "main.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;		None               void
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/20
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1
   862 ;;      Params:         0       0       0
   863 ;;      Locals:         0       0       0
   864 ;;      Temps:          0       0       0
   865 ;;      Totals:         0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    3
   869 ;; This function calls:
   870 ;;		_DelayUs
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875  01C9                     _Task_IRSend:	
   876                           
   877                           ;main.c: 291: if ( task_ready.bit2 ){
   878                           
   879                           ; Regs used in _Task_IRSend: [wreg+status,2+status,0+pclath+cstack]
   880  01C9  1D79               	btfss	_task_ready,2	;volatile
   881  01CA  0008               	return
   882  01CB  30C8               	movlw	200
   883                           
   884                           ;main.c: 292: PC4=0;
   885  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   886  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   887  01CE  1207               	bcf	7,4
   888                           
   889                           ;main.c: 293: DelayUs(200);
   890  01CF  21ED               	fcall	_DelayUs
   891                           
   892                           ;main.c: 294: PC4=1;
   893  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   894  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   895  01D2  1607               	bsf	7,4
   896                           
   897                           ;main.c: 295: task_ready.bit2 = 0;
   898  01D3  1179               	bcf	_task_ready,2	;volatile
   899  01D4  0008               	return
   900  01D5                     __end_of_Task_IRSend:	
   901                           
   902                           	psect	text498
   903  0195                     __ptext498:	
   904 ;; =============== function _Task_IRSend ends ============
   905                           
   906                           
   907 ;; *************** function _Task_Idle *****************
   908 ;; Defined at:
   909 ;;		line 338 in file "main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;		None               void
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/20
   920 ;;		On exit  : 60/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1
   923 ;;      Params:         0       0       0
   924 ;;      Locals:         0       0       0
   925 ;;      Temps:          0       0       0
   926 ;;      Totals:         0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    3
   930 ;; This function calls:
   931 ;;		_Timer2Init
   932 ;;		_DelayUs
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937  0195                     _Task_Idle:	
   938                           
   939                           ; Regs used in _Task_Idle: [wreg+status,2+status,0+pclath+cstack]
   940  0195  0063               	sleep	;#
   941  0196  0064               	clrwdt	;#
   942                           
   943                           ;main.c: 341: Timer2Init();
   944  0197  2185               	fcall	_Timer2Init
   945                           
   946                           ;main.c: 342: DelayUs(100);
   947  0198  3064               	movlw	100
   948  0199  21ED               	fcall	_DelayUs
   949  019A  3064               	movlw	100
   950                           
   951                           ;main.c: 343: PC4=0;
   952  019B  1283               	bcf	3,5	;RP0=0, select bank0
   953  019C  1303               	bcf	3,6	;RP1=0, select bank0
   954  019D  1207               	bcf	7,4
   955                           
   956                           ;main.c: 344: DelayUs(100);
   957  019E  21ED               	fcall	_DelayUs
   958                           
   959                           ;main.c: 345: PC4=1;
   960  019F  1283               	bcf	3,5	;RP0=0, select bank0
   961  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   962  01A1  1607               	bsf	7,4
   963  01A2  0008               	return
   964  01A3                     __end_of_Task_Idle:	
   965                           
   966                           	psect	text499
   967  01ED                     __ptext499:	
   968 ;; =============== function _Task_Idle ends ============
   969                           
   970                           
   971 ;; *************** function _DelayUs *****************
   972 ;; Defined at:
   973 ;;		line 458 in file "board.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  Time            1    wreg     unsigned char 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  Time            1    2[COMMON] unsigned char 
   978 ;;  a               1    3[COMMON] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;		None               void
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0
   983 ;; Tracked objects:
   984 ;;		On entry : 60/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1
   988 ;;      Params:         0       0       0
   989 ;;      Locals:         2       0       0
   990 ;;      Temps:          0       0       0
   991 ;;      Totals:         2       0       0
   992 ;;Total ram usage:        2 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    2
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_Task_IRSend
   999 ;;		_Task_Idle
  1000 ;;		_GET_ADC_DATA
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003  01ED                     _DelayUs:	
  1004                           
  1005                           ; Regs used in _DelayUs: [wreg+status,2+status,0]
  1006                           ;DelayUs@Time stored from wreg
  1007  01ED  00F2               	movwf	DelayUs@Time
  1008                           
  1009                           ;board.c: 459: uint8_t a;
  1010                           ;board.c: 460: for(a=0;a<Time;a++)
  1011  01EE  01F3               	clrf	DelayUs@a
  1012  01EF                     l3968:	
  1013  01EF  0872               	movf	DelayUs@Time,w
  1014  01F0  0273               	subwf	DelayUs@a,w
  1015  01F1  1803               	btfsc	3,0
  1016  01F2  0008               	return
  1017                           
  1018                           ;board.c: 461: {
  1019                           ;board.c: 462: _nop();
  1020  01F3  0000               	nop
  1021  01F4  0AF3               	incf	DelayUs@a,f
  1022  01F5  29EF               	goto	l3968
  1023  01F6                     __end_of_DelayUs:	
  1024                           
  1025                           	psect	text500
  1026  0139                     __ptext500:	
  1027 ;; =============== function _DelayUs ends ============
  1028                           
  1029                           
  1030 ;; *************** function _BoardInit *****************
  1031 ;; Defined at:
  1032 ;;		line 31 in file "board.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;		None               void
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 17F/0
  1043 ;;		On exit  : 17F/20
  1044 ;;		Unchanged: FFE80/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          0       0       0
  1049 ;;      Totals:         0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    3
  1053 ;; This function calls:
  1054 ;;		_ClockInit
  1055 ;;		_Timer0Init
  1056 ;;		_Timer1Init
  1057 ;;		_INTInit
  1058 ;;		_Pwm4Init
  1059 ;;		_Pwm5Init
  1060 ;;		_ADCInit
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065  0139                     _BoardInit:	
  1066                           
  1067                           ;board.c: 33: ClockInit();
  1068                           
  1069                           ; Regs used in _BoardInit: [wreg+status,2+status,0+pclath+cstack]
  1070  0139  2150               	fcall	_ClockInit
  1071                           
  1072                           ;board.c: 34: Timer0Init();
  1073  013A  2207               	fcall	_Timer0Init
  1074                           
  1075                           ;board.c: 35: Timer1Init();
  1076  013B  21A3               	fcall	_Timer1Init
  1077                           
  1078                           ;board.c: 37: INTInit();
  1079  013C  21FF               	fcall	_INTInit
  1080                           
  1081                           ;board.c: 40: Pwm4Init();
  1082  013D  2175               	fcall	_Pwm4Init
  1083                           
  1084                           ;board.c: 41: Pwm5Init();
  1085  013E  2165               	fcall	_Pwm5Init
  1086                           
  1087                           ;board.c: 42: ADCInit();
  1088  013F  21F6               	fcall	_ADCInit
  1089                           
  1090                           ;board.c: 45: PORTA&=0x3f;TRISA&=0x3f;;
  1091  0140  303F               	movlw	63
  1092  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0142  0585               	andwf	5,f	;volatile
  1094  0143  1683               	bsf	3,5	;RP0=1, select bank1
  1095  0144  0585               	andwf	5,f	;volatile
  1096                           
  1097                           ;board.c: 46: PC4=0;TRISC4=0;
  1098  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0146  1207               	bcf	7,4
  1100  0147  1683               	bsf	3,5	;RP0=1, select bank1
  1101  0148  1207               	bcf	7,4
  1102                           
  1103                           ;board.c: 47: PA3 = 1;TRISA3=1;WPUA|=0x08;
  1104  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1105  014A  1585               	bsf	5,3
  1106  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1107  014C  1585               	bsf	5,3
  1108  014D  1595               	bsf	21,3	;volatile
  1109                           
  1110                           ;board.c: 53: GIE = 1;
  1111  014E  178B               	bsf	11,7
  1112  014F  0008               	return
  1113  0150                     __end_of_BoardInit:	
  1114                           
  1115                           	psect	text501
  1116  01F6                     __ptext501:	
  1117 ;; =============== function _BoardInit ends ============
  1118                           
  1119                           
  1120 ;; *************** function _ADCInit *****************
  1121 ;; Defined at:
  1122 ;;		line 348 in file "board.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;		None               void
  1129 ;; Registers used:
  1130 ;;		wreg
  1131 ;; Tracked objects:
  1132 ;;		On entry : 17F/20
  1133 ;;		On exit  : 17F/20
  1134 ;;		Unchanged: FFE80/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1
  1136 ;;      Params:         0       0       0
  1137 ;;      Locals:         0       0       0
  1138 ;;      Temps:          0       0       0
  1139 ;;      Totals:         0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    2
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_BoardInit
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149  01F6                     _ADCInit:	
  1150                           
  1151                           ;board.c: 353: ADCON1 = 0B01100000;
  1152                           
  1153                           ; Regs used in _ADCInit: [wreg]
  1154  01F6  3060               	movlw	96
  1155  01F7  009F               	movwf	31	;volatile
  1156                           
  1157                           ;board.c: 355: ADCON0 = 0B10111101;
  1158  01F8  30BD               	movlw	189
  1159  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1160  01FA  009F               	movwf	31	;volatile
  1161                           
  1162                           ;board.c: 362: ANSEL = 0B00000100;
  1163  01FB  3004               	movlw	4
  1164  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  1165  01FD  0091               	movwf	17	;volatile
  1166  01FE  0008               	return
  1167  01FF                     __end_of_ADCInit:	
  1168                           
  1169                           	psect	text502
  1170  0165                     __ptext502:	
  1171 ;; =============== function _ADCInit ends ============
  1172                           
  1173                           
  1174 ;; *************** function _Pwm5Init *****************
  1175 ;; Defined at:
  1176 ;;		line 314 in file "board.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;		None               void
  1183 ;; Registers used:
  1184 ;;		wreg, status,2
  1185 ;; Tracked objects:
  1186 ;;		On entry : 17F/20
  1187 ;;		On exit  : 17F/20
  1188 ;;		Unchanged: FFE80/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1
  1190 ;;      Params:         0       0       0
  1191 ;;      Locals:         0       0       0
  1192 ;;      Temps:          0       0       0
  1193 ;;      Totals:         0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    2
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_BoardInit
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203  0165                     _Pwm5Init:	
  1204  0165  3032               	movlw	50
  1205                           
  1206                           ;board.c: 316: TRISC2 = 1;
  1207                           
  1208                           ; Regs used in _Pwm5Init: [wreg+status,2]
  1209  0166  1507               	bsf	7,2
  1210                           
  1211                           ;board.c: 317: PWM5CR0 = 0B00110010;
  1212  0167  1283               	bcf	3,5	;RP0=0, select bank2
  1213  0168  1703               	bsf	3,6	;RP1=1, select bank2
  1214  0169  009B               	movwf	27	;volatile
  1215                           
  1216                           ;board.c: 323: PWM5CR1 = 0B10000000;
  1217  016A  3080               	movlw	128
  1218  016B  009C               	movwf	28	;volatile
  1219                           
  1220                           ;board.c: 331: T5CKDIV = 14;
  1221  016C  300E               	movlw	14
  1222  016D  009D               	movwf	29	;volatile
  1223                           
  1224                           ;board.c: 333: TMR5H = 0;
  1225  016E  0199               	clrf	25	;volatile
  1226                           
  1227                           ;board.c: 334: PR5L = 0;
  1228  016F  019A               	clrf	26	;volatile
  1229                           
  1230                           ;board.c: 335: TMR5ON = 1;
  1231  0170  151C               	bsf	28,2
  1232                           
  1233                           ;board.c: 336: TRISC2 = 0;
  1234  0171  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0172  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0173  1107               	bcf	7,2
  1237  0174  0008               	return
  1238  0175                     __end_of_Pwm5Init:	
  1239                           
  1240                           	psect	text503
  1241  0175                     __ptext503:	
  1242 ;; =============== function _Pwm5Init ends ============
  1243                           
  1244                           
  1245 ;; *************** function _Pwm4Init *****************
  1246 ;; Defined at:
  1247 ;;		line 280 in file "board.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;		None               void
  1254 ;; Registers used:
  1255 ;;		wreg, status,2
  1256 ;; Tracked objects:
  1257 ;;		On entry : 17F/20
  1258 ;;		On exit  : 17F/20
  1259 ;;		Unchanged: FFE80/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1
  1261 ;;      Params:         0       0       0
  1262 ;;      Locals:         0       0       0
  1263 ;;      Temps:          0       0       0
  1264 ;;      Totals:         0       0       0
  1265 ;;Total ram usage:        0 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    2
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_BoardInit
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274  0175                     _Pwm4Init:	
  1275  0175  3032               	movlw	50
  1276                           
  1277                           ;board.c: 282: TRISC3 = 1;
  1278                           
  1279                           ; Regs used in _Pwm4Init: [wreg+status,2]
  1280  0176  1587               	bsf	7,3
  1281                           
  1282                           ;board.c: 283: PWM4CR0 = 0B00110010;
  1283  0177  1283               	bcf	3,5	;RP0=0, select bank2
  1284  0178  1703               	bsf	3,6	;RP1=1, select bank2
  1285  0179  0095               	movwf	21	;volatile
  1286                           
  1287                           ;board.c: 289: PWM4CR1 = 0B10000000;
  1288  017A  3080               	movlw	128
  1289  017B  0096               	movwf	22	;volatile
  1290                           
  1291                           ;board.c: 297: T4CKDIV = 14;
  1292  017C  300E               	movlw	14
  1293  017D  0097               	movwf	23	;volatile
  1294                           
  1295                           ;board.c: 299: TMR4H = 0;
  1296  017E  0193               	clrf	19	;volatile
  1297                           
  1298                           ;board.c: 300: PR4L = 0;
  1299  017F  0194               	clrf	20	;volatile
  1300                           
  1301                           ;board.c: 301: TMR4ON = 1;
  1302  0180  1516               	bsf	22,2
  1303                           
  1304                           ;board.c: 302: TRISC3 = 0;
  1305  0181  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0182  1303               	bcf	3,6	;RP1=0, select bank1
  1307  0183  1187               	bcf	7,3
  1308  0184  0008               	return
  1309  0185                     __end_of_Pwm4Init:	
  1310                           
  1311                           	psect	text504
  1312  01FF                     __ptext504:	
  1313 ;; =============== function _Pwm4Init ends ============
  1314                           
  1315                           
  1316 ;; *************** function _INTInit *****************
  1317 ;; Defined at:
  1318 ;;		line 209 in file "board.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;		None               void
  1325 ;; Registers used:
  1326 ;;		wreg
  1327 ;; Tracked objects:
  1328 ;;		On entry : 17F/0
  1329 ;;		On exit  : 17F/20
  1330 ;;		Unchanged: FFE80/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1
  1332 ;;      Params:         0       0       0
  1333 ;;      Locals:         0       0       0
  1334 ;;      Temps:          0       0       0
  1335 ;;      Totals:         0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    2
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_BoardInit
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345  01FF                     _INTInit:	
  1346  01FF  30DF               	movlw	223
  1347                           
  1348                           ;board.c: 210: TRISC1 = 1;
  1349                           
  1350                           ; Regs used in _INTInit: [wreg]
  1351  0200  1683               	bsf	3,5	;RP0=1, select bank1
  1352  0201  1487               	bsf	7,1
  1353                           
  1354                           ;board.c: 211: ANSEL = 0B11011111;
  1355  0202  0091               	movwf	17	;volatile
  1356                           
  1357                           ;board.c: 213: INTEDG = 0;
  1358  0203  1301               	bcf	1,6
  1359                           
  1360                           ;board.c: 214: INTF = 0;
  1361  0204  108B               	bcf	11,1
  1362                           
  1363                           ;board.c: 215: INTE = 1;
  1364  0205  160B               	bsf	11,4
  1365  0206  0008               	return
  1366  0207                     __end_of_INTInit:	
  1367                           
  1368                           	psect	text505
  1369  0207                     __ptext505:	
  1370 ;; =============== function _INTInit ends ============
  1371                           
  1372                           
  1373 ;; *************** function _Timer0Init *****************
  1374 ;; Defined at:
  1375 ;;		line 104 in file "board.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;		None               void
  1382 ;; Registers used:
  1383 ;;		wreg
  1384 ;; Tracked objects:
  1385 ;;		On entry : 17F/0
  1386 ;;		On exit  : 17F/20
  1387 ;;		Unchanged: FFE80/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1
  1389 ;;      Params:         0       0       0
  1390 ;;      Locals:         0       0       0
  1391 ;;      Temps:          0       0       0
  1392 ;;      Totals:         0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    2
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_BoardInit
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402  0207                     _Timer0Init:	
  1403                           
  1404                           ;board.c: 105: OPTION = 0B00000010;
  1405                           
  1406                           ; Regs used in _Timer0Init: [wreg]
  1407  0207  3002               	movlw	2
  1408  0208  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0209  0081               	movwf	1	;volatile
  1410                           
  1411                           ;board.c: 111: T0IF = 0;
  1412  020A  110B               	bcf	11,2
  1413                           
  1414                           ;board.c: 112: T0IE = 1;
  1415  020B  168B               	bsf	11,5
  1416  020C  0008               	return
  1417  020D                     __end_of_Timer0Init:	
  1418                           
  1419                           	psect	text506
  1420  0150                     __ptext506:	
  1421 ;; =============== function _Timer0Init ends ============
  1422                           
  1423                           
  1424 ;; *************** function _ClockInit *****************
  1425 ;; Defined at:
  1426 ;;		line 63 in file "board.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;		None               void
  1433 ;; Registers used:
  1434 ;;		wreg, status,2
  1435 ;; Tracked objects:
  1436 ;;		On entry : 17F/0
  1437 ;;		On exit  : 17F/0
  1438 ;;		Unchanged: FFE80/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1
  1440 ;;      Params:         0       0       0
  1441 ;;      Locals:         0       0       0
  1442 ;;      Temps:          0       0       0
  1443 ;;      Totals:         0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_BoardInit
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453  0150                     _ClockInit:	
  1454                           
  1455                           ;board.c: 64: OSCCON = 0X00|0X70|0x01;
  1456                           
  1457                           ; Regs used in _ClockInit: [wreg+status,2]
  1458  0150  3071               	movlw	113
  1459  0151  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0152  008F               	movwf	15	;volatile
  1461                           
  1462                           ;board.c: 69: INTCON = 0;
  1463  0153  018B               	clrf	11	;volatile
  1464                           
  1465                           ;board.c: 72: PORTA = 0B00000000;
  1466  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0155  0185               	clrf	5	;volatile
  1468                           
  1469                           ;board.c: 73: TRISA = 0B11111111;
  1470  0156  30FF               	movlw	255
  1471  0157  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0158  0085               	movwf	5	;volatile
  1473                           
  1474                           ;board.c: 74: WPUA = 0B00000000;
  1475  0159  0195               	clrf	21	;volatile
  1476                           
  1477                           ;board.c: 76: PORTC = 0B00000000;
  1478  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1479  015B  0187               	clrf	7	;volatile
  1480                           
  1481                           ;board.c: 77: TRISC = 0B11111111;
  1482  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1483  015D  0087               	movwf	7	;volatile
  1484                           
  1485                           ;board.c: 78: WPUC = 0B00000000;
  1486  015E  0188               	clrf	8	;volatile
  1487                           
  1488                           ;board.c: 80: OPTION = 0B00000000;
  1489  015F  0181               	clrf	1	;volatile
  1490                           
  1491                           ;board.c: 88: MSCKCON = 0B00000000;
  1492  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1493  0161  019B               	clrf	27	;volatile
  1494                           
  1495                           ;board.c: 92: CMCON0 = 0B00000111;
  1496  0162  3007               	movlw	7
  1497  0163  0099               	movwf	25	;volatile
  1498  0164  0008               	return
  1499  0165                     __end_of_ClockInit:	
  1500                           
  1501                           	psect	text507
  1502  0185                     __ptext507:	
  1503 ;; =============== function _ClockInit ends ============
  1504                           
  1505                           
  1506 ;; *************** function _Timer2Init *****************
  1507 ;; Defined at:
  1508 ;;		line 168 in file "board.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;		None               void
  1515 ;; Registers used:
  1516 ;;		wreg, status,2
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/20
  1519 ;;		On exit  : 60/0
  1520 ;;		Unchanged: FFF9F/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1
  1522 ;;      Params:         0       0       0
  1523 ;;      Locals:         0       0       0
  1524 ;;      Temps:          0       0       0
  1525 ;;      Totals:         0       0       0
  1526 ;;Total ram usage:        0 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    2
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_Task_Idle
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535  0185                     _Timer2Init:	
  1536                           
  1537                           ;board.c: 169: T2CON = 0B00010110;
  1538                           
  1539                           ; Regs used in _Timer2Init: [wreg+status,2]
  1540  0185  3016               	movlw	22
  1541  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0188  0092               	movwf	18	;volatile
  1544                           
  1545                           ;board.c: 172: TMR2 = 0;
  1546  0189  0191               	clrf	17	;volatile
  1547                           
  1548                           ;board.c: 173: PR2 = 200;
  1549  018A  30C8               	movlw	200
  1550  018B  1683               	bsf	3,5	;RP0=1, select bank1
  1551  018C  0092               	movwf	18	;volatile
  1552                           
  1553                           ;board.c: 175: TMR2IF = 0;
  1554  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1555  018E  108C               	bcf	12,1
  1556                           
  1557                           ;board.c: 176: TMR2IE = 1;
  1558  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1559  0190  148C               	bsf	12,1
  1560                           
  1561                           ;board.c: 177: TMR2ON = 1;
  1562  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0192  1512               	bsf	18,2
  1564                           
  1565                           ;board.c: 178: PEIE=1;
  1566  0193  170B               	bsf	11,6
  1567  0194  0008               	return
  1568  0195                     __end_of_Timer2Init:	
  1569                           
  1570                           	psect	text508
  1571  01A3                     __ptext508:	
  1572 ;; =============== function _Timer2Init ends ============
  1573                           
  1574                           
  1575 ;; *************** function _Timer1Init *****************
  1576 ;; Defined at:
  1577 ;;		line 124 in file "board.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;		None               void
  1584 ;; Registers used:
  1585 ;;		wreg
  1586 ;; Tracked objects:
  1587 ;;		On entry : 17F/20
  1588 ;;		On exit  : 17F/0
  1589 ;;		Unchanged: FFE80/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1
  1591 ;;      Params:         0       0       0
  1592 ;;      Locals:         0       0       0
  1593 ;;      Temps:          0       0       0
  1594 ;;      Totals:         0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    2
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_BoardInit
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604  01A3                     _Timer1Init:	
  1605                           
  1606                           ;board.c: 126: T1CON = 0B00110000;
  1607                           
  1608                           ; Regs used in _Timer1Init: [wreg]
  1609  01A3  3030               	movlw	48
  1610  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1611  01A5  0090               	movwf	16	;volatile
  1612                           
  1613                           ;board.c: 129: TMR1L = 0XE0;
  1614  01A6  30E0               	movlw	224
  1615  01A7  008E               	movwf	14	;volatile
  1616                           
  1617                           ;board.c: 131: TMR1H = 0XB1;
  1618  01A8  30B1               	movlw	177
  1619  01A9  008F               	movwf	15	;volatile
  1620                           
  1621                           ;board.c: 133: TMR1IE = 1;
  1622  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1623  01AB  140C               	bsf	12,0
  1624                           
  1625                           ;board.c: 134: TMR1ON = 1;
  1626  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1627  01AD  1410               	bsf	16,0
  1628                           
  1629                           ;board.c: 135: PEIE=1;
  1630  01AE  170B               	bsf	11,6
  1631  01AF  0008               	return
  1632  01B0                     __end_of_Timer1Init:	
  1633                           
  1634                           	psect	text509
  1635  0056                     __ptext509:	
  1636 ;; =============== function _Timer1Init ends ============
  1637                           
  1638                           
  1639 ;; *************** function _Task_SoftPwm *****************
  1640 ;; Defined at:
  1641 ;;		line 196 in file "main.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;		None               void
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/20
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: FFF9F/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1
  1655 ;;      Params:         0       0       0
  1656 ;;      Locals:         0       0       0
  1657 ;;      Temps:          0       0       0
  1658 ;;      Totals:         0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    2
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668  0056                     _Task_SoftPwm:	
  1669                           
  1670                           ;main.c: 197: if ( cct ){
  1671                           
  1672                           ; Regs used in _Task_SoftPwm: [wreg+status,2+status,0]
  1673  0056  0877               	movf	_cct,w
  1674  0057  1903               	btfsc	3,2
  1675  0058  2873               	goto	l3758
  1676                           
  1677                           ;main.c: 198: if ( cct == 1 ){
  1678  0059  0B77               	decfsz	_cct,w
  1679  005A  2860               	goto	l3748
  1680                           
  1681                           ;main.c: 199: brightCW = bright;
  1682  005B  087B               	movf	_bright,w
  1683  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1684  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1685  005E  00AB               	movwf	_brightCW
  1686  005F  2876               	goto	L1
  1687  0060                     l3748:	
  1688                           ;main.c: 201: }
  1689                           
  1690                           ;main.c: 200: brightWW = 0;
  1691                           
  1692                           
  1693                           ;main.c: 202: else if ( cct == 2 ){
  1694  0060  0877               	movf	_cct,w
  1695  0061  3A02               	xorlw	2
  1696  0062  1D03               	skipz
  1697  0063  2868               	goto	l3754
  1698                           
  1699                           ;main.c: 203: brightCW = 0;
  1700  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0066  01AB               	clrf	_brightCW
  1703  0067  2870               	goto	L2
  1704  0068                     l3754:	
  1705                           ;main.c: 205: }
  1706                           
  1707                           ;main.c: 204: brightWW = bright;
  1708                           
  1709                           
  1710                           ;main.c: 206: else if ( cct == 3 ){
  1711  0068  0877               	movf	_cct,w
  1712  0069  3A03               	xorlw	3
  1713  006A  1D03               	skipz
  1714  006B  2877               	goto	l3760
  1715                           
  1716                           ;main.c: 207: brightCW = bright;
  1717  006C  087B               	movf	_bright,w
  1718  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1719  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1720  006F  00AB               	movwf	_brightCW
  1721  0070                     L2:	
  1722                           
  1723                           ;main.c: 208: brightWW = bright;
  1724  0070  087B               	movf	_bright,w
  1725  0071  00AC               	movwf	_brightWW
  1726  0072  2877               	goto	l3760
  1727  0073                     l3758:	
  1728                           ;main.c: 209: }
  1729                           ;main.c: 210: }
  1730                           
  1731                           
  1732                           ;main.c: 211: else {
  1733                           ;main.c: 212: brightCW = 0;
  1734  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0075  01AB               	clrf	_brightCW
  1737  0076                     L1:	
  1738                           
  1739                           ;main.c: 213: brightWW = 0;
  1740  0076  01AC               	clrf	_brightWW
  1741  0077                     l3760:	
  1742                           
  1743                           ;main.c: 214: }
  1744                           ;main.c: 215: if ( task_ready.bit0 ){
  1745  0077  1C79               	btfss	_task_ready,0	;volatile
  1746  0078  0008               	return
  1747                           
  1748                           ;main.c: 218: if ( brightWW != PR4L ){
  1749  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1750  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1751  007B  082C               	movf	_brightWW,w
  1752  007C  1703               	bsf	3,6	;RP1=1, select bank2
  1753  007D  0614               	xorwf	20,w	;volatile
  1754                           
  1755                           ;main.c: 219: if ( brightWW > PR4L )
  1756  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1757  007F  1903               	skipnz
  1758  0080  288A               	goto	L3
  1759  0081  082C               	movf	_brightWW,w
  1760  0082  1703               	bsf	3,6	;RP1=1, select bank2
  1761  0083  0214               	subwf	20,w	;volatile
  1762  0084  1803               	skipnc
  1763  0085  2888               	goto	l3768
  1764                           
  1765                           ;main.c: 220: PR4L++;
  1766  0086  0A94               	incf	20,f	;volatile
  1767  0087  2889               	goto	l3770
  1768  0088                     l3768:	
  1769                           
  1770                           ;main.c: 221: else
  1771                           ;main.c: 222: PR4L--;
  1772  0088  0394               	decf	20,f	;volatile
  1773  0089                     l3770:	
  1774                           
  1775                           ;main.c: 223: }
  1776                           ;main.c: 227: if ( brightCW != PR5L ){
  1777  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1778  008A                     L3:	
  1779  008A  082B               	movf	_brightCW,w
  1780  008B  1703               	bsf	3,6	;RP1=1, select bank2
  1781  008C  061A               	xorwf	26,w	;volatile
  1782  008D  1903               	skipnz
  1783  008E  2898               	goto	l3778
  1784                           
  1785                           ;main.c: 228: if ( brightCW > PR5L )
  1786  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0090  082B               	movf	_brightCW,w
  1788  0091  1703               	bsf	3,6	;RP1=1, select bank2
  1789  0092  021A               	subwf	26,w	;volatile
  1790  0093  1803               	skipnc
  1791  0094  2897               	goto	l3776
  1792                           
  1793                           ;main.c: 229: PR5L++;
  1794  0095  0A9A               	incf	26,f	;volatile
  1795  0096  2898               	goto	l3778
  1796  0097                     l3776:	
  1797                           
  1798                           ;main.c: 230: else
  1799                           ;main.c: 231: PR5L--;
  1800  0097  039A               	decf	26,f	;volatile
  1801  0098                     l3778:	
  1802                           
  1803                           ;main.c: 232: }
  1804                           ;main.c: 235: task_ready.bit0 = 0;
  1805  0098  1079               	bcf	_task_ready,0	;volatile
  1806  0099  0008               	return
  1807  009A                     __end_of_Task_SoftPwm:	
  1808                           
  1809                           	psect	text510
  1810  009A                     __ptext510:	
  1811 ;; =============== function _Task_SoftPwm ends ============
  1812                           
  1813                           
  1814 ;; *************** function _Task_Key *****************
  1815 ;; Defined at:
  1816 ;;		line 246 in file "main.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;		None               void
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/20
  1827 ;;		On exit  : 0/20
  1828 ;;		Unchanged: FFFFF/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1
  1830 ;;      Params:         0       0       0
  1831 ;;      Locals:         0       0       0
  1832 ;;      Temps:          1       0       0
  1833 ;;      Totals:         1       0       0
  1834 ;;Total ram usage:        1 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    2
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843  009A                     _Task_Key:	
  1844                           
  1845                           ;main.c: 247: static uint8_t key_press_time = 0;
  1846                           ;main.c: 249: if ( task_ready.bit1 ){
  1847                           
  1848                           ; Regs used in _Task_Key: [wreg+status,2+status,0]
  1849  009A  1CF9               	btfss	_task_ready,1	;volatile
  1850  009B  0008               	return
  1851                           
  1852                           ;main.c: 250: if ( sys_status.bit1 ){
  1853  009C  1CF8               	btfss	_sys_status,1	;volatile
  1854  009D  28B3               	goto	l3720
  1855                           
  1856                           ;main.c: 251: if ( key_press_time < 100 )
  1857  009E  3064               	movlw	100
  1858  009F  0276               	subwf	Task_Key@key_press_time,w
  1859  00A0  1803               	skipnc
  1860  00A1  28A4               	goto	l1151
  1861                           
  1862                           ;main.c: 252: key_press_time++;
  1863  00A2  0AF6               	incf	Task_Key@key_press_time,f
  1864  00A3  28CF               	goto	l3738
  1865  00A4                     l1151:	
  1866                           
  1867                           ;main.c: 253: else {
  1868                           ;main.c: 254: sys_status.bit2 = 1;
  1869  00A4  1578               	bsf	_sys_status,2	;volatile
  1870                           
  1871                           ;main.c: 255: if ( sys_status.bit5 ){
  1872  00A5  1EF8               	btfss	_sys_status,5	;volatile
  1873  00A6  28AD               	goto	l3716
  1874                           
  1875                           ;main.c: 256: if ( bright > 25 )
  1876  00A7  301A               	movlw	26
  1877  00A8  027B               	subwf	_bright,w
  1878  00A9  1C03               	skipc
  1879  00AA  28CF               	goto	l3738
  1880                           
  1881                           ;main.c: 257: bright--;
  1882  00AB  03FB               	decf	_bright,f
  1883  00AC  28CF               	goto	l3738
  1884  00AD                     l3716:	
  1885                           
  1886                           ;main.c: 259: else {
  1887                           ;main.c: 260: if ( bright < 255 )
  1888  00AD  087B               	movf	_bright,w
  1889  00AE  3AFF               	xorlw	255
  1890  00AF  1903               	skipnz
  1891  00B0  28CF               	goto	l3738
  1892                           
  1893                           ;main.c: 261: bright++;
  1894  00B1  0AFB               	incf	_bright,f
  1895  00B2  28CF               	goto	l3738
  1896  00B3                     l3720:	
  1897                           ;main.c: 262: }
  1898                           ;main.c: 263: }
  1899                           ;main.c: 264: }
  1900                           
  1901                           
  1902                           ;main.c: 265: else if ( key_press_time ){
  1903  00B3  0876               	movf	Task_Key@key_press_time,w
  1904  00B4  1903               	btfsc	3,2
  1905  00B5  28CF               	goto	l3738
  1906                           
  1907                           ;main.c: 266: key_press_time = 0;
  1908  00B6  01F6               	clrf	Task_Key@key_press_time
  1909                           
  1910                           ;main.c: 267: if ( !sys_status.bit2 ){
  1911  00B7  1978               	btfsc	_sys_status,2	;volatile
  1912  00B8  28C3               	goto	l3734
  1913                           
  1914                           ;main.c: 268: if ( ++cct > 3 ){
  1915  00B9  3004               	movlw	4
  1916  00BA  0AF7               	incf	_cct,f
  1917  00BB  0277               	subwf	_cct,w
  1918  00BC  1C03               	skipc
  1919  00BD  28CE               	goto	l3736
  1920  00BE  30FF               	movlw	255
  1921                           
  1922                           ;main.c: 269: cct = 0;
  1923  00BF  01F7               	clrf	_cct
  1924                           
  1925                           ;main.c: 270: bright = 255;
  1926  00C0  00FB               	movwf	_bright
  1927                           
  1928                           ;main.c: 271: sys_status.bit5 = 1;
  1929  00C1  16F8               	bsf	_sys_status,5	;volatile
  1930  00C2  28CE               	goto	l3736
  1931  00C3                     l3734:	
  1932                           
  1933                           ;main.c: 274: else {
  1934                           ;main.c: 275: sys_status.bit5 = !sys_status.bit5;
  1935  00C3  3000               	movlw	0
  1936  00C4  1EF8               	btfss	_sys_status,5	;volatile
  1937  00C5  3001               	movlw	1
  1938  00C6  00F2               	movwf	??_Task_Key
  1939  00C7  0EF2               	swapf	??_Task_Key,f
  1940  00C8  0DF2               	rlf	??_Task_Key,f
  1941  00C9  0878               	movf	_sys_status,w	;volatile
  1942  00CA  0672               	xorwf	??_Task_Key,w
  1943  00CB  39DF               	andlw	-33
  1944  00CC  0672               	xorwf	??_Task_Key,w
  1945  00CD  00F8               	movwf	_sys_status	;volatile
  1946  00CE                     l3736:	
  1947                           
  1948                           ;main.c: 276: }
  1949                           ;main.c: 277: sys_status.bit2 = 0;
  1950  00CE  1178               	bcf	_sys_status,2	;volatile
  1951  00CF                     l3738:	
  1952                           
  1953                           ;main.c: 278: }
  1954                           ;main.c: 279: task_ready.bit1 = 0;
  1955  00CF  10F9               	bcf	_task_ready,1	;volatile
  1956  00D0  0008               	return
  1957  00D1                     __end_of_Task_Key:	
  1958                           
  1959                           	psect	text511
  1960  000B                     __ptext511:	
  1961 ;; =============== function _Task_Key ends ============
  1962                           
  1963                           
  1964 ;; *************** function _ISR *****************
  1965 ;; Defined at:
  1966 ;;		line 94 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 40/0
  1978 ;;		Unchanged: FFF9F/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1
  1980 ;;      Params:         0       0       0
  1981 ;;      Locals:         0       0       0
  1982 ;;      Temps:          2       0       0
  1983 ;;      Totals:         2       0       0
  1984 ;;Total ram usage:        2 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    1
  1987 ;; This function calls:
  1988 ;;		_Timer1DeInit
  1989 ;;		_Timer2DeInit
  1990 ;;		i1_Timer1Init
  1991 ;; This function is called by:
  1992 ;;		Interrupt level 1
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995  000B                     _ISR:	
  1996                           
  1997                           ;main.c: 97: if(T0IE && T0IF){
  1998  000B  1A8B               	btfsc	11,5
  1999  000C  1D0B               	btfss	11,2
  2000  000D  281D               	goto	i1l3800
  2001                           
  2002                           ;main.c: 98: TMR0 = 155;
  2003  000E  309B               	movlw	155
  2004  000F  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0010  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0011  0081               	movwf	1	;volatile
  2007                           
  2008                           ;main.c: 99: if ( ++ticks >= 50 ){
  2009  0012  3032               	movlw	50
  2010  0013  0AFA               	incf	_ticks,f
  2011  0014  027A               	subwf	_ticks,w
  2012  0015  1C03               	skipc
  2013  0016  281C               	goto	i1l3798
  2014                           
  2015                           ;main.c: 100: ticks = 0;
  2016  0017  01FA               	clrf	_ticks
  2017                           
  2018                           ;main.c: 102: task_ready.bit2 = 1;
  2019  0018  1579               	bsf	_task_ready,2	;volatile
  2020                           
  2021                           ;main.c: 103: task_ready.bit0 = 1;
  2022  0019  1479               	bsf	_task_ready,0	;volatile
  2023                           
  2024                           ;main.c: 104: task_ready.bit1 = 1;
  2025  001A  14F9               	bsf	_task_ready,1	;volatile
  2026                           
  2027                           ;main.c: 105: sys_status.bit6 = 1;
  2028  001B  1778               	bsf	_sys_status,6	;volatile
  2029  001C                     i1l3798:	
  2030                           
  2031                           ;main.c: 107: }
  2032                           ;main.c: 108: T0IF = 0;
  2033  001C  110B               	bcf	11,2
  2034  001D                     i1l3800:	
  2035                           
  2036                           ;main.c: 109: }
  2037                           ;main.c: 113: if ( TMR1IF ){
  2038  001D  1283               	bcf	3,5	;RP0=0, select bank0
  2039  001E  1303               	bcf	3,6	;RP1=0, select bank0
  2040  001F  1C0C               	btfss	12,0
  2041  0020  2828               	goto	i1l3812
  2042                           
  2043                           ;main.c: 114: TMR1IF = 0;
  2044  0021  100C               	bcf	12,0
  2045                           
  2046                           ;main.c: 115: Timer1DeInit();
  2047  0022  21E1               	fcall	_Timer1DeInit
  2048                           
  2049                           ;main.c: 116: TMR1L = 0XE0;
  2050  0023  30E0               	movlw	224
  2051  0024  008E               	movwf	14	;volatile
  2052                           
  2053                           ;main.c: 118: TMR1H = 0XB1;
  2054  0025  30B1               	movlw	177
  2055  0026  008F               	movwf	15	;volatile
  2056                           
  2057                           ;main.c: 119: sys_status.bit1 = 0;
  2058  0027  10F8               	bcf	_sys_status,1	;volatile
  2059  0028                     i1l3812:	
  2060                           
  2061                           ;main.c: 120: }
  2062                           ;main.c: 125: if ( TMR2IE && TMR2IF ){
  2063  0028  1683               	bsf	3,5	;RP0=1, select bank1
  2064  0029  1C8C               	btfss	12,1
  2065  002A  2831               	goto	i1l3822
  2066  002B  1283               	bcf	3,5	;RP0=0, select bank0
  2067  002C  1C8C               	btfss	12,1
  2068  002D  2831               	goto	i1l3822
  2069                           
  2070                           ;main.c: 126: Timer2DeInit();
  2071  002E  21B0               	fcall	_Timer2DeInit
  2072                           
  2073                           ;main.c: 127: sys_status.bit1 = 0;
  2074  002F  10F8               	bcf	_sys_status,1	;volatile
  2075                           
  2076                           ;main.c: 128: TMR2IF = 0;
  2077  0030  108C               	bcf	12,1
  2078  0031                     i1l3822:	
  2079                           
  2080                           ;main.c: 129: }
  2081                           ;main.c: 133: if(INTE && INTF)
  2082  0031  1A0B               	btfsc	11,4
  2083  0032  1C8B               	btfss	11,1
  2084  0033  284F               	goto	i1l1127
  2085                           
  2086                           ;main.c: 134: {
  2087                           ;main.c: 135: INTF = 0;
  2088  0034  108B               	bcf	11,1
  2089                           
  2090                           ;main.c: 137: if ( TMR1ON ){
  2091  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0036  1C10               	btfss	16,0
  2093  0037  284E               	goto	i1l3834
  2094                           
  2095                           ;main.c: 138: tim1val = (uint16_t)TMR1H<<8|TMR1L;
  2096  0038  080F               	movf	15,w	;volatile
  2097  0039  00A9               	movwf	_tim1val+1
  2098  003A  01A8               	clrf	_tim1val
  2099  003B  080E               	movf	14,w	;volatile
  2100  003C  04A8               	iorwf	_tim1val,f
  2101                           
  2102                           ;main.c: 139: if ( ( tim1val <= 51000 ) && ( tim1val >= 50000 ) ){
  2103  003D  30C7               	movlw	199
  2104  003E  0229               	subwf	_tim1val+1,w
  2105  003F  3039               	movlw	57
  2106  0040  1903               	skipnz
  2107  0041  0228               	subwf	_tim1val,w
  2108  0042  1803               	skipnc
  2109  0043  284D               	goto	i1l1125
  2110  0044  30C3               	movlw	195
  2111  0045  0229               	subwf	_tim1val+1,w
  2112  0046  3050               	movlw	80
  2113  0047  1903               	skipnz
  2114  0048  0228               	subwf	_tim1val,w
  2115  0049  1C03               	skipc
  2116  004A  284D               	goto	i1l1125
  2117                           
  2118                           ;main.c: 140: sys_status.bit1 = 1;
  2119  004B  14F8               	bsf	_sys_status,1	;volatile
  2120                           
  2121                           ;main.c: 141: }
  2122  004C  284E               	goto	i1l3834
  2123  004D                     i1l1125:	
  2124                           
  2125                           ;main.c: 142: else
  2126                           ;main.c: 143: sys_status.bit1 = 0;
  2127  004D  10F8               	bcf	_sys_status,1	;volatile
  2128  004E                     i1l3834:	
  2129                           
  2130                           ;main.c: 144: }
  2131                           ;main.c: 145: Timer1Init();
  2132  004E  21D5               	fcall	i1_Timer1Init
  2133  004F                     i1l1127:	
  2134  004F  0871               	movf	??_ISR+1,w
  2135  0050  008A               	movwf	10
  2136  0051  0E70               	swapf	??_ISR^(0+-128),w
  2137  0052  0083               	movwf	3
  2138  0053  0EFE               	swapf	126,f
  2139  0054  0E7E               	swapf	126,w
  2140  0055  0009               	retfie
  2141  0056                     __end_of_ISR:	
  2142                           
  2143                           	psect	intentry
  2144  0004                     __pintentry:	
  2145                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2146                           
  2147  0004                     interrupt_function:	
  2148  007E                     saved_w	set	btemp
  2149  0004  00FE               	movwf	btemp
  2150  0005  0E03               	swapf	3,w
  2151  0006  00F0               	movwf	??_ISR
  2152  0007  080A               	movf	10,w
  2153  0008  00F1               	movwf	??_ISR+1
  2154  0009  280B               	ljmp	_ISR
  2155                           
  2156                           	psect	text512
  2157  01D5                     __ptext512:	
  2158 ;; =============== function _ISR ends ============
  2159                           
  2160                           
  2161 ;; *************** function i1_Timer1Init *****************
  2162 ;; Defined at:
  2163 ;;		line 124 in file "board.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;		None               void
  2170 ;; Registers used:
  2171 ;;		wreg
  2172 ;; Tracked objects:
  2173 ;;		On entry : 60/0
  2174 ;;		On exit  : 60/0
  2175 ;;		Unchanged: FFF9F/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1
  2177 ;;      Params:         0       0       0
  2178 ;;      Locals:         0       0       0
  2179 ;;      Temps:          0       0       0
  2180 ;;      Totals:         0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_ISR
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189  01D5                     i1_Timer1Init:	
  2190                           
  2191                           ;board.c: 126: T1CON = 0B00110000;
  2192                           
  2193                           ; Regs used in i1_Timer1Init: [wreg]
  2194  01D5  3030               	movlw	48
  2195  01D6  0090               	movwf	16	;volatile
  2196                           
  2197                           ;board.c: 129: TMR1L = 0XE0;
  2198  01D7  30E0               	movlw	224
  2199  01D8  008E               	movwf	14	;volatile
  2200                           
  2201                           ;board.c: 131: TMR1H = 0XB1;
  2202  01D9  30B1               	movlw	177
  2203  01DA  008F               	movwf	15	;volatile
  2204                           
  2205                           ;board.c: 133: TMR1IE = 1;
  2206  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2207  01DC  140C               	bsf	12,0
  2208                           
  2209                           ;board.c: 134: TMR1ON = 1;
  2210  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2211  01DE  1410               	bsf	16,0
  2212                           
  2213                           ;board.c: 135: PEIE=1;
  2214  01DF  170B               	bsf	11,6
  2215  01E0  0008               	return
  2216  01E1                     __end_ofi1_Timer1Init:	
  2217                           
  2218                           	psect	text513
  2219  01B0                     __ptext513:	
  2220 ;; =============== function i1_Timer1Init ends ============
  2221                           
  2222                           
  2223 ;; *************** function _Timer2DeInit *****************
  2224 ;; Defined at:
  2225 ;;		line 188 in file "board.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;		None               void
  2232 ;; Registers used:
  2233 ;;		wreg, status,2
  2234 ;; Tracked objects:
  2235 ;;		On entry : 60/0
  2236 ;;		On exit  : 60/0
  2237 ;;		Unchanged: FFF9F/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1
  2239 ;;      Params:         0       0       0
  2240 ;;      Locals:         0       0       0
  2241 ;;      Temps:          0       0       0
  2242 ;;      Totals:         0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_ISR
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251  01B0                     _Timer2DeInit:	
  2252                           
  2253                           ;board.c: 189: T2CON = 0B00011010;
  2254                           
  2255                           ; Regs used in _Timer2DeInit: [wreg+status,2]
  2256  01B0  301A               	movlw	26
  2257  01B1  0092               	movwf	18	;volatile
  2258                           
  2259                           ;board.c: 192: TMR2 = 0;
  2260  01B2  0191               	clrf	17	;volatile
  2261                           
  2262                           ;board.c: 193: PR2 = 200;
  2263  01B3  30C8               	movlw	200
  2264  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2265  01B5  0092               	movwf	18	;volatile
  2266                           
  2267                           ;board.c: 195: TMR2IF = 0;
  2268  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2269  01B7  108C               	bcf	12,1
  2270                           
  2271                           ;board.c: 196: TMR2IE = 0;
  2272  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2273  01B9  108C               	bcf	12,1
  2274                           
  2275                           ;board.c: 197: TMR2ON = 0;
  2276  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2277  01BB  1112               	bcf	18,2
  2278  01BC  0008               	return
  2279  01BD                     __end_of_Timer2DeInit:	
  2280                           
  2281                           	psect	text514
  2282  01E1                     __ptext514:	
  2283 ;; =============== function _Timer2DeInit ends ============
  2284                           
  2285                           
  2286 ;; *************** function _Timer1DeInit *****************
  2287 ;; Defined at:
  2288 ;;		line 145 in file "board.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		wreg
  2297 ;; Tracked objects:
  2298 ;;		On entry : 60/0
  2299 ;;		On exit  : 60/0
  2300 ;;		Unchanged: FFF9F/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1
  2302 ;;      Params:         0       0       0
  2303 ;;      Locals:         0       0       0
  2304 ;;      Temps:          0       0       0
  2305 ;;      Totals:         0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_ISR
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314  01E1                     _Timer1DeInit:	
  2315                           
  2316                           ;board.c: 147: T1CON = 0B00110000;
  2317                           
  2318                           ; Regs used in _Timer1DeInit: [wreg]
  2319  01E1  3030               	movlw	48
  2320  01E2  0090               	movwf	16	;volatile
  2321                           
  2322                           ;board.c: 150: TMR1L = 0XE0;
  2323  01E3  30E0               	movlw	224
  2324  01E4  008E               	movwf	14	;volatile
  2325                           
  2326                           ;board.c: 152: TMR1H = 0XB1;
  2327  01E5  30B1               	movlw	177
  2328  01E6  008F               	movwf	15	;volatile
  2329                           
  2330                           ;board.c: 154: TMR1IE = 0;
  2331  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2332  01E8  100C               	bcf	12,0
  2333                           
  2334                           ;board.c: 155: TMR1ON = 0;
  2335  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2336  01EA  1010               	bcf	16,0
  2337                           
  2338                           ;board.c: 156: PEIE=1;
  2339  01EB  170B               	bsf	11,6
  2340  01EC  0008               	return
  2341  01ED                     __end_of_Timer1DeInit:	
  2342                           
  2343                           	psect	text515
  2344  0000                     __ptext515:	
  2345 ;; =============== function _Timer1DeInit ends ============
  2346                           
  2347  007E                     btemp	set	126	;btemp
  2348  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed May 01 12:53:09 2019

                   _GIE 005F                     _PA3 002B                     _PA6 002E                     _PA7 002F  
                   _PC4 003C                     _PR2 0092                     _ISR 000B                     _SR0 0CF6  
                   _SR1 0CF7                     _cct 0077         __end_of_ADCInit 01FF                    ?_ISR 0070  
                  l1151 00A4                    l1170 0107                    l1171 0108                    l1180 0000  
                  l1172 010C                    l2301 00E7                    l1173 011A                    l1174 0119  
                  l2304 0000                    l4000 0000                    l2313 0000                    l4002 0000  
                  l4020 0000                    l4012 0000                    l4030 0000                    l2271 0000  
                  l2280 0000                    l4008 0000                    l4040 0000                    l4032 0000  
                  l4024 0000                    l2265 0000                    l2274 0000                    l4018 0000  
                  l4042 0000                    l4034 0000                    l4026 0000                    l2268 0000  
                  l2292 0000                    l4044 0132                    l4036 0000                    l4028 0000  
                  l2286 0000                    l4046 0131                    l4038 0000                    l2295 0000  
                  l2298 0000                    l3720 00B3                    l3704 0000                    l3730 0000  
                  l3722 0000                    l3732 0000                    l3724 0000                    l3716 00AD  
                  l3740 0000                    l3900 0000                    l3734 00C3                    l3742 0000  
                  l3910 0000                    l3902 0000                    l3736 00CE                    l3752 0000  
                  l3760 0077                    l3744 0000                    l3904 0000                    l3920 0000  
                  l3912 0000                    l3738 00CF                    l3770 0089                    l3754 0068  
                  l3746 0000                    l3906 0000                    l3922 0000                    l3914 0000  
                  l3930 0000                    l3748 0060                    l3860 0000                    l3908 0000  
                  l3916 0000                    l3932 0000                    l3924 0000                    l3758 0073  
                  l3862 0000                    l3870 0000                    l3918 0000                    l3934 0000  
                  l3926 0000                    l3950 0000                    l3776 0097                    l3768 0088  
                  l3856 0000                    l3872 0000                    l3864 0000                    l3880 0000  
                  l3928 0000                    l3936 0000                    l3960 0000                    l3952 0000  
                  l3778 0098                    l3858 0000                    l3874 0000                    l3866 0000  
                  l3890 0000                    l3882 0000                    l3962 0000                    l3954 0000  
                  l3946 0000                    l3970 0000                    l3876 0000                    l3868 0000  
                  l3892 0000                    l3884 0000                    l3956 0000                    l3948 0000  
                  l3964 0000                    l3972 0000                    l3894 0000                    l3886 0000  
                  l3878 0000                    l3958 0000                    l3966 0000                    l3974 0000  
                  l3982 0000                    l3990 0000                    l3888 0000                    l3896 0000  
                  l3968 01EF                    l3976 0000                    l3984 0000                    l3992 0000  
                  l3898 0000                    l3986 0000                    l3978 0000                    l3994 0000  
                  l3996 0000                    l3988 0000                    l3998 0000                    _T0IE 005D  
                  _T0IF 005A                    _PEIE 005E                    _INTE 005C                    _INTF 0059  
                  _PR4L 0114                    _PR5L 011A         __end_of_INTInit 0207                    _TMR0 0001  
                  _TMR2 0011                    _STRA 0CE8                    _STRB 0CE9                    _STRC 0CEA  
                  _STRD 0CEB                    _WREN 0C62                    _WPUA 0095                    _WPUC 0088  
                  _main 011C                    btemp 007E                    start 000A         __end_of_DelayUs 01F6  
                 ??_ISR 0070  Task_Key@key_press_time 0076                   _C1SEN 0CF5                   _C2REN 0CF4  
                 ?_main 0070                   _EEPGD 0C67                   _ANSEL 0091                   _T1CON 0010  
                 _T2CON 0012                   _TMR1H 000F                   _TMR1L 000E                   _TMR4H 0113  
                 _TMR5H 0119                   _PORTA 0005                   _PORTC 0007                   _SRCON 019E  
                 _PULSR 0CF2                   _PULSS 0CF3                   _TRISA 0085                   _TRISC 0087  
                 _ticks 007A                   pclath 000A                   status 0003                   wtemp0 007E  
          __end_of_main 0139               ??_ADCInit 0072      __size_of_BoardInit 0017        __end_of_Pwm4Init 0185  
                ??_main 0076        __end_of_Pwm5Init 0175           ??_Task_IRSend 0074        __end_of_Task_Key 00D1  
   GET_ADC_DATA@tBuffer 0020      __size_of_ClockInit 0015               ??_INTInit 0072           ??_Task_LowBat 0076  
  __end_of_GET_ADC_DATA 00FB    GET_ADC_DATA@ADC_DATA 0023                  _ADCON0 001F                  _ADCON1 009F  
                _ADRESH 001E                  _ADRESL 009E                  _CMCON0 0019                  i1l1125 004D  
                i1l1127 004F                  i1l2274 0000                  i1l2283 0000                  i1l2277 0000  
                i1l3800 001D                  i1l3810 0000                  i1l3820 0000                  i1l3804 0000  
                i1l3812 0028                  i1l3822 0031                  i1l3806 0000                  i1l3840 0000  
                i1l3808 0000                  i1l3842 0000                  i1l3850 0000                  i1l3834 004E  
                i1l3818 0000                  i1l3836 0000                  i1l3852 0000                  i1l3844 0000  
                i1l3940 0000                  i1l3780 0000                  i1l3838 0000                  i1l3854 0000  
                i1l3846 0000                  i1l3942 0000                  i1l3790 0000                  i1l3848 0000  
                i1l3944 0000                  i1l3792 0000                  i1l3938 0000                  i1l3794 0000  
                i1l3786 0000                  i1l3796 0000                  i1l3798 001C                  _INTEDG 040E  
                _INTCON 000B               ??_DelayUs 0072                  _OSCCON 008F                  _TMR1IE 0460  
                _TMR1IF 0060                  _TMR2IE 0461                  _TMR2IF 0061                  _OPTION 0081  
                _TMR1ON 0080                  _TMR2ON 0092                  _TMR4ON 08B2                  _TMR5ON 08E2  
                _TRISA3 042B                  _TRISC1 0439                  _TRISC2 043A                  _TRISC3 043B  
                _TRISC4 043C              _Timer0Init 0207              _Timer1Init 01A3              _Timer2Init 0185  
                _adcVal 0026      __size_of_Task_Idle 000E                  _bright 007B                  saved_w 007E  
   __end_of_Task_IRSend 01D5     __end_of_Task_LowBat 011C       __end_of_BoardInit 0150       __end_of_ClockInit 0165  
        __pcstackCOMMON 0070       GET_ADC_DATA@AN_CH 0022           ?_Task_SoftPwm 0070       __end_of_Task_Idle 01A3  
            __pbssBANK0 0026           ?_Timer1DeInit 0070           ?_Timer2DeInit 0070              __pnvCOMMON 007B  
             ?_Pwm4Init 0070               ?_Pwm5Init 0070               ?_Task_Key 0070             ?_Timer0Init 0070  
           ?_Timer1Init 0070             ?_Timer2Init 0070              __pmaintext 011C          ??_Task_SoftPwm 0072  
            __pintentry 0004                 _ADCInit 01F6                 _T4CKDIV 0117                 _T5CKDIV 011D  
 __size_of_GET_ADC_DATA 002A             _Task_IRSend 01C9                 _GO_DONE 00F9                 _MSCKCON 001B  
               _INTInit 01FF                 _PWM4CR0 0115                 _PWM4CR1 0116                 _PWM5CR0 011B  
               _PWM5CR1 011C             _Task_LowBat 00FB                 _PSTRCON 019D                 _STRSYNC 0CEC  
        ??_Timer1DeInit 0070          ??_Timer2DeInit 0070                 _DelayUs 01ED              ??_Pwm4Init 0072  
            ??_Pwm5Init 0072              ??_Task_Key 0072            _GET_ADC_DATA 00D1            __size_of_ISR 004B  
               _tim1val 0028     __size_of_Timer0Init 0006     __size_of_Timer1Init 000D     __size_of_Timer2Init 0010  
  end_of_initialization 01C7              _task_ready 0079           ?i1_Timer1Init 0070    __end_of_Task_SoftPwm 009A  
             _BoardInit 0139               _ClockInit 0150    __end_of_Timer1DeInit 01ED    __end_of_Timer2DeInit 01BD  
            _sys_status 0078          ??i1_Timer1Init 0070     start_initialization 01BD             __end_of_ISR 0056  
             _Task_Idle 0195            ??_Timer0Init 0072            ??_Timer1Init 0072            ??_Timer2Init 0072  
            ?_BoardInit 0070       __size_of_Pwm4Init 0010       __size_of_Pwm5Init 0010              ?_ClockInit 0070  
     __size_of_Task_Key 0037                ?_ADCInit 0070            ?_Task_IRSend 0070             __pbssCOMMON 0076  
         __pcstackBANK0 0020                ?_INTInit 0070            ?_Task_LowBat 0070      __end_of_Timer0Init 020D  
    __end_of_Timer1Init 01B0      __end_of_Timer2Init 0195                ?_DelayUs 0070              ?_Task_Idle 0070  
             __pnvBANK0 002B  GET_ADC_DATA@ADCON0Buff 0025               __ptext500 0139               __ptext501 01F6  
             __ptext510 009A               __ptext502 0165               __ptext511 000B               __ptext503 0175  
             __ptext512 01D5               __ptext504 01FF               __ptext513 01B0               __ptext505 0207  
             __ptext514 01E1               __ptext506 0150               __ptext515 0000               __ptext507 0185  
             __ptext508 01A3               __ptext509 0056               __ptext494 0000               __ptext495 00FB  
             __ptext496 00D1               __ptext497 01C9               __ptext498 0195               __ptext499 01ED  
 __size_of_Task_SoftPwm 0044       interrupt_function 0004                DelayUs@a 0073             ??_BoardInit 0072  
  __end_ofi1_Timer1Init 01E1   __size_of_Timer1DeInit 000C   __size_of_Timer2DeInit 000D             ??_ClockInit 0072  
          _Task_SoftPwm 0056        __size_of_ADCInit 0009        __size_of_INTInit 0008                _ReadAPin 002A  
          _Timer1DeInit 01E1            _Timer2DeInit 01B0             DelayUs@Time 0072        __size_of_DelayUs 0009  
           ??_Task_Idle 0074                _Pwm4Init 0175                _Pwm5Init 0165                _Task_Key 009A  
  __size_of_Task_IRSend 000C                _brightCW 002B                _brightWW 002C    __size_of_Task_LowBat 0021  
         __size_of_main 001D                intlevel1 0000   __size_ofi1_Timer1Init 000C           ?_GET_ADC_DATA 0074  
          i1_Timer1Init 01D5          ??_GET_ADC_DATA 0076  
